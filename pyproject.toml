[build-system]
requires = ["hatchling>=1.5"]
build-backend = "hatchling.build"

[project]
name = "jupyter_server_terminals"
readme = "README.md"
dynamic = ["version"]
license = { file = "LICENSE" }
description = "A Jupyter Server Extension Providing Terminals."
keywords = ["ipython", "jupyter"]
classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10"
]
requires-python = ">=3.8"
dependencies = [
  "pywinpty>=2.0.3;os_name=='nt'",
  "terminado>=0.8.3",
]

[[project.authors]]
name = "Jupyter Development Team"
email = "jupyter@googlegroups.com"

[project.urls]
Homepage = "https://jupyter.org"

[project.optional-dependencies]
test = [
  "coverage",
  "jupyter_server>=2.0.0rc8",
  "pytest-jupyter[server]>=0.5.3",
  "pytest>=7.0",
  "pytest-cov",
  "pytest-timeout",
]
docs = [
"jinja2",
"jupyter_server",
"mistune<2.0",  # https://github.com/jupyter/nbconvert/issues/1685"
"myst-parser",
"nbformat",
"packaging",
"tornado",
"pydata_sphinx_theme",
"sphinxcontrib-openapi",
"sphinxcontrib_github_alt",
"sphinxemoji",
]

[tool.hatch.version]
path = "jupyter_server_terminals/_version.py"

[tool.hatch.build.targets.wheel.shared-data]
"jupyter-config" = "etc/jupyter/jupyter_server_config.d"


[tool.hatch.envs.docs]
features = ["docs"]
[tool.hatch.envs.docs.scripts]
build = "make -C docs html SPHINXOPTS='-W'"

[tool.hatch.envs.test]
features = ["test"]
[tool.hatch.envs.test.scripts]
test = "python -m pytest -vv {args}"
nowarn = "test -W default {args}"

[tool.hatch.envs.cov]
features = ["test"]
dependencies = ["coverage", "pytest-cov"]
[tool.hatch.envs.cov.scripts]
test = "python -m pytest -vv --cov jupyter_server_terminals --cov-branch --cov-report term-missing:skip-covered {args}"
nowarn = "test -W default {args}"

[tool.pytest.ini_options]
addopts = "-raXs --durations 10 --color=yes --doctest-modules"
testpaths = [
    "tests/"
]
timeout = 300
# Restore this setting to debug failures
# timeout_method = "thread"
filterwarnings = [
  "error",
  # from tornado
  "ignore:unclosed <socket.socket:ResourceWarning",
  # From juypter core
  "module:Jupyter is migrating its paths to use standard platformdirs:DeprecationWarning",
]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
no_implicit_reexport = true
pretty = true
show_error_context = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_unused_configs = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[tool.flake8]
ignore = "E501, W503, E402"
builtins = "c, get_config"
exclude = [
    ".cache",
    ".github",
    "docs",
    "setup.py",
]
enable-extensions = "G"
extend-ignore = [
    "G001", "G002", "G004", "G200", "G201", "G202",
    # black adds spaces around ':'
    "E203",
]
per-file-ignores = [
    # B011: Do not call assert False since python -O removes these calls
    # F841 local variable 'foo' is assigned to but never used
    "tests/*: B011", "F841",
]
